# Породично стабло
Аутор: 
Текст и тест примери: 
Анализа решења:  Урош Костадиновић
Тестирање: 

### Први подзадатак:
Можемо испробати свих $2^n$ могућих подскупова за решење. Проверавамо да ли су чворови на истом путу користећи $in$ и $out$ време у дфс обиласку. Временска сложеност $O(2^n)$.

### Други подзадатак:
Ако нам је оптимално решење када је сума бројева већа од $S$, онда ћемо брисањем било ког броја добити суму мању од $S$. За сваки лист посматрајмо пут од корена до њега. Наћи ћемо све могуће вредности суме мање од $S$ на том путу користећи проблем ранца. Када додајемо нови чвор у ранац и добијемо да можемо да направимо неку суму већу од $S$ узећемо ту суму као кандидата за решење, као и све могуће суме мање од $S$. Временска сложеност: $O(N^2S)$. Меморијска сложеност: $O(NS)$.

### Трећи подзадатак:
За сваки чвор чуваћемо низ $dp_i$ тако да је $dp_i,s$ једнако 1 ако је могуће да направимо суму $s$ у подстаблу чвора $i$. Дфс обиласком ћемо рачунати ове вредности, тако што прво израчунамо вредности за децу неког чвора и онда радимо слично као у проблему ранца. Временска сложеност: $O(NS)$. Меморијска сложеност: $O(NS)$.
### Главно решење:
У решењу за трећи подзадатак нам је проблем меморија. За сваки чвор “тешко” дете зовемо оно дете са највећим велићином подстабла (ако их има више изаберемо произвољно), док су сва остала деца “лака”.  У дфс обиласку за чвор $u$ ћемо прво израчунати вредности за тешко дете и вредности за њега уписивати на место које је предвићено за чвор $u$, док када идемо у лако дете вредности ћемо уписивати у нови низ. Када нам неки низ више није потребан вратићемо му све вредности на $0$ и искористити за неки други чвор. На овај начин ће нам бити потребно $O(logN)$ низова дужине $S$, јер ћемо нови низ користити само када идемо у лако дете, а то ћемо урадити максимално $O(logN)$ пута јер сваки пут величину подстабла барем преполовимо. Временска сложеност: $O(NS)$. Меморијска сложеност: $O(SlogN)$.

